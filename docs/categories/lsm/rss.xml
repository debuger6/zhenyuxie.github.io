<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>lsm on debuger</title><link>/categories/lsm/</link><description>Recent content in lsm on debuger</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sun, 30 Jan 2022 22:58:00 +0000</lastBuildDate><atom:link href="/categories/lsm/rss.xml" rel="self" type="application/rss+xml"/><item><title>Compaction 策略 - Leveled</title><link>/2022/01/30/compaction-leveled/</link><pubDate>Sun, 30 Jan 2022 22:58:00 +0000</pubDate><guid>/2022/01/30/compaction-leveled/</guid><description>在上一章，我们介绍了 Size-Tiered Compaction 策略（STCS），讨论了 STCS 的原理，并着重分析了它的缺陷 &amp;ndash; 空间放大。本章我们将会介绍另一种策略 &amp;ndash; Level Compaction Strategy (LCS)，该策</description></item><item><title>Compaction 策略 - Size-Tiered</title><link>/2022/01/27/compaction-size-tired/</link><pubDate>Thu, 27 Jan 2022 23:58:00 +0000</pubDate><guid>/2022/01/27/compaction-size-tired/</guid><description>开篇 本系列文章主要介绍 LSM-Tree 中非常重要的技术点 &amp;ndash; Compaction。理解 Compaction 的作用及工作机制，对基于 LSM-Tree 类型的数据库开发或者调优有极大的益处。本系</description></item></channel></rss>